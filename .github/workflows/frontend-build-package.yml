# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Frontend - Build and Package

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - 'frontend/**'
  workflow_dispatch:

defaults:
  run:
    working-directory: frontend    

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  packages: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/frotnend/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/frontend/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.5.0
          
      - name: Install dependencies
        run: npm ci
      - name: Build with Next.js
        run: npx next build

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.5.0
          registry-url: https://npm.pkg.github.com/
          scope: '@JozzaOzza'
      
      - name: Authenticate with GitHub
        run:   
          echo "//npm.pkg.github.com:_authToken=${{ secrets.GITHUB_TOKEN }}" >
          ~/.npmrc

      - name: Update version in package.json
        shell: pwsh
        env:
          RunNumber: ${{ github.run_number }}
        run: |
          $packageJsonFile = Get-Content '.\package.json' -raw | ConvertFrom-Json -depth 99
          $packageJsonFile.version = "1.0.$($env:RunNumber)"
          $packageJsonFile | ConvertTo-Json -depth 99 | set-content '.\package.json'   

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
